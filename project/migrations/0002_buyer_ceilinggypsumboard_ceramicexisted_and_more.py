# Generated by Django 5.0 on 2024-01-15 04:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('branches', '0002_branch_slack'),
        ('client', '0008_rename_slack_channel_client_slack_channel_name'),
        ('designer', '0002_chatboot_chatstate'),
        ('project', '0001_initial'),
        ('teamview', '0002_viewer_user'),
        ('technical', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.FloatField(default=0.0)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CeilingGypsumBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CeramicExisted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientOpenToMakeEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoorProvided',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('is_accepted', models.BooleanField(default=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('is_process', models.BooleanField(default=False)),
                ('is_finished', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('process', 'process'), ('finished', 'finished')], default='process', max_length=10)),
                ('uuid', models.UUIDField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Heater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlumbingEstablished',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToiletType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='projectroadmap',
            name='project',
        ),
        migrations.AddField(
            model_name='project',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='branches.branch', verbose_name='project_Branch'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_client_approved_2d',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='is_client_approved_3d',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='is_client_approved_study',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='ref_budget',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='count_kids',
            field=models.PositiveBigIntegerField(default=0, null=True),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='count_kids_female',
            field=models.PositiveBigIntegerField(default=0, null=True),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='count_kids_male',
            field=models.PositiveBigIntegerField(default=0, null=True),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='count_rooms',
            field=models.PositiveBigIntegerField(default=0, null=True),
        ),
        migrations.AddField(
            model_name='projectimage',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_client_project', to='client.client'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='designer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_designer_project', to='designer.designer'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_project', to='project.comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_project', to='project.project'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='technical',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_technical_project', to='technical.technical'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='viewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_viewer_project', to='teamview.viewer'),
        ),
        migrations.AlterField(
            model_name='project',
            name='uuid',
            field=models.UUIDField(editable=False, unique=True, verbose_name='secret_key'),
        ),
        migrations.AlterField(
            model_name='projectbasic',
            name='count_boiler',
            field=models.PositiveBigIntegerField(default=0, null=True),
        ),
        migrations.AlterField(
            model_name='projectbasic',
            name='hight_window',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='ceilingGypsumBoard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.ceilinggypsumboard', verbose_name='ceilingGypsumBoard'),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='ceramicExisted',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.ceramicexisted', verbose_name='ceramicExisted'),
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='clientOpenToMakeEdit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.clientopentomakeedit', verbose_name='clientOpenToMakeEdit'),
        ),
        migrations.CreateModel(
            name='Comment_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_clients', to='client.client')),
                ('designer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repliesDesignerS', to='designer.designer')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_images', to='project.projectimage')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='project.comment_image')),
                ('technical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repliesTechnical', to='technical.technical')),
                ('viewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repliesViewer', to='teamview.viewer')),
            ],
        ),
        migrations.CreateModel(
            name='CommentOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('Key_option', models.CharField(max_length=20)),
                ('created_by', models.CharField(max_length=40, null=True)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies_options', to='project.commentoptions')),
                ('project_basic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_options', to='project.projectbasic')),
            ],
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='doorProvided',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.doorprovided', verbose_name='doorProvided'),
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackFloor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('is_accepted', models.BooleanField(default=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('process', 'process'), ('finished', 'finished')], default='process', max_length=10)),
                ('uuid', models.UUIDField(editable=False)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.floor')),
            ],
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='heater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.heater', verbose_name='heater'),
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('project_basic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.projectbasic')),
            ],
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='plumbingEstablished',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.plumbingestablished', verbose_name='plumbingEstablished'),
        ),
        migrations.CreateModel(
            name='ProjectFile3D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='uploads/Files/')),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('can_client_sea', models.BooleanField(default=False)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.project', verbose_name='project_file')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImage2D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='uploads/images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])])),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('can_client_sea', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.project', verbose_name='project_file')),
            ],
        ),
        migrations.CreateModel(
            name='CommentImage2D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('project_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='project.projectimage2d')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=1000)),
                ('price', models.IntegerField()),
                ('measurement', models.CharField(max_length=150)),
                ('count', models.IntegerField()),
                ('total_price', models.IntegerField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('uuid', models.UUIDField(editable=False)),
                ('feedback_client', models.ManyToManyField(blank=True, related_name='project_feedbacks', to='project.feedback')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
        ),
        migrations.AddField(
            model_name='feedback',
            name='project_study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.projectstudy'),
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('uuid', models.UUIDField(editable=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.feedback')),
            ],
        ),
        migrations.AddField(
            model_name='feedback',
            name='replies',
            field=models.ManyToManyField(blank=True, null=True, related_name='feedbacks_floor', to='project.reply'),
        ),
        migrations.CreateModel(
            name='ReplyCommentImage2D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='project.commentimage2d')),
            ],
        ),
        migrations.CreateModel(
            name='ReplyFloor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('uuid', models.UUIDField(editable=False)),
                ('created_at', models.DateField(auto_now=True)),
                ('feedback_floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.feedbackfloor')),
            ],
        ),
        migrations.AddField(
            model_name='feedbackfloor',
            name='replies',
            field=models.ManyToManyField(blank=True, related_name='feedbacks_floor', to='project.replyfloor'),
        ),
        migrations.CreateModel(
            name='SiteEng',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='branches.branch')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='replyfloor',
            name='site_Eng',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.siteeng'),
        ),
        migrations.AddField(
            model_name='floor',
            name='site_eng',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='floorEng', to='project.siteeng'),
        ),
        migrations.CreateModel(
            name='SitesManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='branches.branch')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='replyfloor',
            name='site_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.sitesmanager'),
        ),
        migrations.AddField(
            model_name='reply',
            name='site_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.sitesmanager'),
        ),
        migrations.AddField(
            model_name='floor',
            name='site_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='floorEng', to='project.sitesmanager'),
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('taxes', models.FloatField(default=0.0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('IN_PROGRESS', 'IN_PROGRESS'), ('FINISHED', 'FINISHED')], max_length=250)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.floor')),
            ],
        ),
        migrations.CreateModel(
            name='Moshtrayat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.FloatField(default=0.0)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_cost', models.FloatField(default=0.0)),
                ('delivered_to_site_eng', models.BooleanField(default=False)),
                ('approved_buying', models.BooleanField(default=False)),
                ('approved_delivery', models.BooleanField(default=False)),
                ('approved_sending', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ordered_by_site_eng', models.BooleanField(null=True)),
                ('ordered_by_site_manager', models.BooleanField(null=True)),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.buyer')),
                ('step_moshtrayat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stepMoshtrayats', to='project.step')),
            ],
        ),
        migrations.CreateModel(
            name='StepImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='step_images/')),
                ('uuid', models.UUIDField(editable=False, unique=True)),
                ('is_client_can_sea', models.BooleanField(default=False)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='project.step')),
            ],
        ),
        migrations.AddField(
            model_name='projectbasic',
            name='toiletType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.toilettype', verbose_name='toiletType'),
        ),
        migrations.DeleteModel(
            name='ProjectMoshtrayat',
        ),
        migrations.DeleteModel(
            name='ProjectRoadMap',
        ),
    ]
